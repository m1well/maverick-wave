@use '../abstracts' as *;

// Base grid styles that apply to all grid types
%grid-base {
  display: grid;
  gap: spacing('5');
}

%grid-base-lg {
  display: grid;
  gap: spacing('8'); // Larger spacing
}

.mw-grid {
  @extend %grid-base;
}

.mw-grid-1 {
  @extend %grid-base;
  grid-template-columns: 1fr;

  justify-items: stretch;
  > * {
    width: 100% !important;
    max-width: none !important;
  }
}

.mw-grid-2 {
  @extend %grid-base;
  grid-template-columns: repeat(2, 1fr);

  @include media-down('sm') {
    grid-template-columns: 1fr;
    gap: spacing('3');
  }
}

.mw-grid-3 {
  @extend %grid-base;
  grid-template-columns: repeat(3, 1fr);

  @include media-down('md') {
    grid-template-columns: repeat(2, 1fr);
  }

  @include media-down('sm') {
    grid-template-columns: 1fr;
    gap: spacing('3');
  }
}

.mw-grid-4 {
  @extend %grid-base;
  grid-template-columns: repeat(4, 1fr);

  @include media-down('lg') {
    grid-template-columns: repeat(2, 1fr);
  }

  @include media-down('sm') {
    grid-template-columns: 1fr;
    gap: spacing('3');
  }
}

.mw-grid-5 {
  @extend %grid-base;
  grid-template-columns: repeat(5, 1fr);

  @include media-down('lg') {
    grid-template-columns: repeat(4, 1fr);
  }

  @include media-down('md') {
    grid-template-columns: repeat(3, 1fr);
  }

  @include media-down('sm') {
    grid-template-columns: repeat(2, 1fr);
    gap: spacing('4');
  }

  @include media-down('xs') {
    grid-template-columns: 1fr;
    gap: spacing('3');
  }
}

// flexible grid system with column spans
.mw-grid-flex {
  @extend %grid-base;

  // Default: 12-column grid (you can adjust this base)
  grid-template-columns: repeat(12, 1fr);

  // At MD breakpoint and below, force single column
  @include media-down('md') {
    grid-template-columns: 1fr;
    gap: spacing('3');

    // Reset all spans to full width
    > * {
      grid-column: 1 / -1 !important;
    }
  }
}

// Column span utilities
@for $i from 1 through 12 {
  .mw-col-span-#{$i} {
    grid-column: span #{$i};
  }
}

// Responsive auto grid
.mw-grid-auto {
  @extend %grid-base;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));

  // Ensure children don't override the grid behavior
  > * {
    width: auto !important;
    max-width: none !important;
    min-width: 0; // Prevents overflow issues
  }
}

// Alternative with different minimum widths
.mw-grid-auto-sm {
  @extend %grid-base;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
}

.mw-grid-auto-lg {
  @extend %grid-base;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
}

.mw-grid-lg {
  @extend %grid-base-lg;
}

.mw-grid-1-lg {
  @extend %grid-base-lg;
  grid-template-columns: 1fr;
  justify-items: stretch;
  > * {
    width: 100% !important;
    max-width: none !important;
  }
}

.mw-grid-2-lg {
  @extend %grid-base-lg;
  grid-template-columns: repeat(2, 1fr);
  @include media-down('md') {
    grid-template-columns: 1fr;
    gap: spacing('5');
  }
}

.mw-grid-3-lg {
  @extend %grid-base-lg;
  grid-template-columns: repeat(3, 1fr);
  @include media-down('lg') {
    grid-template-columns: repeat(2, 1fr);
  }
  @include media-down('sm') {
    grid-template-columns: 1fr;
    gap: spacing('5');
  }
}

.mw-grid-4-lg {
  @extend %grid-base-lg;
  grid-template-columns: repeat(4, 1fr);
  @include media-down('xl') {
    grid-template-columns: repeat(2, 1fr);
  }
  @include media-down('sm') {
    grid-template-columns: 1fr;
    gap: spacing('5');
  }
}

.mw-grid-5-lg {
  @extend %grid-base-lg;
  grid-template-columns: repeat(5, 1fr);
  @include media-down('xl') {
    grid-template-columns: repeat(4, 1fr);
  }
  @include media-down('lg') {
    grid-template-columns: repeat(3, 1fr);
  }
  @include media-down('md') {
    grid-template-columns: repeat(2, 1fr);
    gap: spacing('6');
  }
  @include media-down('sm') {
    grid-template-columns: 1fr;
    gap: spacing('5');
  }
}

.mw-grid-auto-lg {
  @extend %grid-base-lg;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
}

// Flexible grids with large spacing
.mw-grid-flex-lg {
  @extend %grid-base-lg;
  grid-template-columns: repeat(12, 1fr);

  @include media-down('md') {
    grid-template-columns: 1fr;
    gap: spacing('5');
    > * {
      grid-column: 1 / -1 !important;
    }
  }
}

// Base stack - items keep their natural width
.mw-grid-stack {
  @extend %grid-base;
  grid-template-columns: 1fr;
  gap: spacing('3');
  justify-items: start; // Items keep natural width, aligned left

  // Remove the forced width from grid-1
  > * {
    width: auto;
    max-width: none;
  }
}

// Stack variants with different alignments
.mw-grid-stack-center {
  @extend %grid-base;
  grid-template-columns: 1fr;
  gap: spacing('3');
  justify-items: center; // Items centered horizontally

  > * {
    max-width: none;
  }
}

.mw-grid-stack-end {
  @extend %grid-base;
  grid-template-columns: 1fr;
  gap: spacing('3');
  justify-items: end; // Items aligned right

  > * {
    width: auto;
    max-width: none;
  }
}

.mw-grid-stack-stretch {
  @extend %grid-base;
  grid-template-columns: 1fr;
  gap: spacing('3');
  justify-items: stretch; // Same as grid-1 (full width)

  > * {
    width: 100%;
    max-width: none;
  }
}

// Large spacing variants
.mw-grid-stack-lg {
  @extend %grid-base-lg;
  grid-template-columns: 1fr;
  gap: spacing('5');
  justify-items: start;

  > * {
    width: auto;
    max-width: none;
  }
}

.mw-grid-stack-center-lg {
  @extend %grid-base-lg;
  grid-template-columns: 1fr;
  gap: spacing('5');
  justify-items: center;

  > * {
    max-width: none;
  }
}
